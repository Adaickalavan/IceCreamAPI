---
version: '3'
services:

  #Mongo database
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - dockerNet
    volumes:
      - "mongo-data:/data/db" #Volume location on `Host:Container` machine   

  #Seed database
  seeddata:
    image: seeddata
    networks:
      - dockerNet

  #Icecream api
  icecream:
    container_name: 'icecream'
    image: icecream
    ports:
      - "8080:8080"
    networks:
      - network1
    depends_on:
      - mongo
    environment:
      - MONGO_PORT=mongo:27017  
      - DATABASE_NAME=product
      - COLLECTION_NAME=icecream

volumes:
  # Volume location on host machine is not specified. 
  # Docker will create and manage these named volumes in a part of the host filesystem 
  # which is managed by Docker (i.e., /var/lib/docker/volumes/ on Linux).
  mongo-data: 
networks:
  dockerNet:
    driver: bridge

# When docker-compose is run in Windows 10 with Hyper-V
# go to "localhost:8080/definition" to see the output.
# When docker-compose is run using Docker Toolbox
# go to "192.168.99.100:8080/definition" to see the output.
# "192.168.99.100" is the ip address of your docker-machine.
# Execute `$ docker-machine ip` to get ip address of your docker-machine.
